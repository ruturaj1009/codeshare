import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import { 
  Home, 
  Search, 
  Bell, 
  Mail, 
  Users, 
  Star, 
  User,
  MoreHorizontal,
  Hash,
  PlusCircle,
  Menu
} from 'lucide-react';

const TwitterClone = () => {
  const [showMobileMenu, setShowMobileMenu] = useState(false);

  const navItems = [
    { icon: <Home size={24} />, label: 'Home' },
    { icon: <Search size={24} />, label: 'Explore' },
    { icon: <Bell size={24} />, label: 'Notifications' },
    { icon: <Mail size={24} />, label: 'Messages' },
    { icon: <Hash size={24} />, label: 'Grok' },
    { icon: <Users size={24} />, label: 'Communities' },
    { icon: <Star size={24} />, label: 'Premium' },
    { icon: <User size={24} />, label: 'Profile' },
    { icon: <MoreHorizontal size={24} />, label: 'More' }
  ];

  const mobileNavItems = navItems.slice(0, 5); // Only show main nav items on mobile

  const [tweets, setTweets] = useState([
    {
      id: 1,
      author: 'Elon Musk',
      username: '@elonmusk',
      content: 'Definitely ðŸ˜‚',
      likes: '135K',
      retweets: '11K',
      replies: '2.3K',
      views: '38M'
    }
  ]);

  const trendingTopics = [
    { title: '2nd December', posts: '42.6K', category: 'Trending in India' },
    { title: '#AnanyaPanday', posts: '1,473', category: 'Entertainment' },
    { title: '$XRP', posts: '625K', category: 'Trending' },
    { title: 'Supreme Court', posts: '54.1K', category: 'Politics' }
  ];

  return (
    <div className="container-fluid bg-black text-white">
      <div className="row">
        {/* Desktop Sidebar */}
        <div className="col-md-3 col-lg-2 d-none d-md-block min-vh-100 position-fixed">
          <div className="d-flex flex-column p-3">
            <div className="mb-4">
              <svg viewBox="0 0 24 24" width="30" height="30" fill="white">
                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
              </svg>
            </div>

            <nav className="nav flex-column gap-1">
              {navItems.map(item => (
                <a 
                  key={item.label} 
                  href="#" 
                  className="nav-link text-white py-2 px-3 d-flex align-items-center gap-3 hover-bg-dark rounded-pill"
                >
                  {item.icon}
                  <span className="fs-5">{item.label}</span>
                </a>
              ))}
            </nav>

            <button className="btn btn-primary rounded-pill mt-3 w-100 py-3">
              Post
            </button>

            <div className="mt-auto mb-3">
              <button className="btn btn-dark rounded-pill w-100 d-flex align-items-center gap-2 p-2">
                <div className="rounded-circle bg-secondary" style={{ width: 40, height: 40 }}></div>
                <div className="text-start">
                  <div className="fw-bold">RUTURAJ SAHU</div>
                  <div className="text-muted">@ruturaj1009</div>
                </div>
                <MoreHorizontal className="ms-auto" />
              </button>
            </div>
          </div>
        </div>

        {/* Mobile Menu Button */}
        <button 
          className="btn btn-dark d-md-none position-fixed top-0 start-0 m-2 z-3"
          onClick={() => setShowMobileMenu(!showMobileMenu)}
        >
          <Menu size={24} />
        </button>

        {/* Mobile Sidebar */}
        <div 
          className={`d-md-none position-fixed top-0 start-0 h-100 bg-black w-75 p-3 z-3 ${showMobileMenu ? 'translate-x-0' : 'translate-x-100'}`}
          style={{ 
            transform: showMobileMenu ? 'translateX(0)' : 'translateX(-100%)',
            transition: 'transform 0.3s ease-in-out'
          }}
        >
          {/* Mobile sidebar content - same as desktop */}
          <div className="d-flex flex-column h-100">
            <div className="mb-4">
              <svg viewBox="0 0 24 24" width="30" height="30" fill="white">
                <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
              </svg>
            </div>
            
            <nav className="nav flex-column gap-1">
              {navItems.map(item => (
                <a 
                  key={item.label} 
                  href="#" 
                  className="nav-link text-white py-2 px-3 d-flex align-items-center gap-3"
                  onClick={() => setShowMobileMenu(false)}
                >
                  {item.icon}
                  <span>{item.label}</span>
                </a>
              ))}
            </nav>
          </div>
        </div>

        {/* Overlay for mobile menu */}
        {showMobileMenu && (
          <div 
            className="position-fixed top-0 start-0 w-100 h-100 bg-black bg-opacity-50 d-md-none z-2"
            onClick={() => setShowMobileMenu(false)}
          />
        )}

        {/* Bottom Mobile Navigation */}
        <div className="d-md-none fixed-bottom bg-black border-top border-secondary py-2 z-1">
          <div className="d-flex justify-content-around">
            {mobileNavItems.map(item => (
              <a 
                key={item.label} 
                href="#" 
                className="text-white text-center"
              >
                {item.icon}
              </a>
            ))}
          </div>
        </div>

        {/* Main Content */}
        <div className="col-12 col-md-6 offset-md-3 offset-lg-2 mb-5 mb-md-0">
          {/* ... Rest of the main content remains the same ... */}
        </div>

        {/* Right Sidebar */}
        <div className="col-md-3 d-none d-lg-block position-fixed end-0">
          {/* ... Right sidebar content remains the same ... */}
        </div>
      </div>
    </div>
  );
};

export default TwitterClone;
